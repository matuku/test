var fs = require('fs');
var exec = require('child_process').exec;

if (process.argv.length != 3){
  console.log('usage: rm *.ttx *_new*; node cmapReplace.js foo.ttf');
  process.exit(0);
}

var orgFontFileName = process.argv[2];
exec('ttx -t cmap '+ orgFontFileName, function(err, stdoutTxt, stderrTxt){
  console.log('ttx -t cmap '+ orgFontFileName);
  console.log(stdoutTxt+stderrTxt);
  var orgTtxName = orgFontFileName.replace(/\.ttf/i, '.ttx');

  var newTtxName = replaceCmap(orgTtxName);

  exec('ttx -m '+ orgFontFileName + ' ' + newTtxName, function(err, stdoutTxt, stderrTxt){
    console.log('ttx -m '+ orgFontFileName + ' ' + newTtxName);
    console.log(stdoutTxt+stderrTxt);
  });
});


function replaceCmap(orgFileName){
  var fileContent = fs.readFileSync(orgFileName) + '';
  fileContent = fileContent.replace(/\r/g, '').replace(/\uFEFF/g, '').replace(/\n*$/, '');
  var lines = fileContent.split(/\n/);

  //var ngChars = '0x9945 0x982d'.split(' '); //「饅」「頭」
  //var toBeReplaced = '0x25cb'; //「○」

  
  var arChars =  ["0xa2","0xa1","0xa4","0xa3","0xa6","0xa5","0xa8","0xa7","0xaa","0xa9","0xab","0xac","0xf3","0xae","0xaf","0xb0","0xb1","0xb2","0xb3","0xb4","0xb5","0xb6","0xb7","0xb8","0xb9","0xba","0xbb","0xbc","0xbd","0xbe","0xbf","0xc0","0xc1","0xc2","0xc4","0xc5","0xc3","0xc6","0xc7","0xc8","0xc9","0xca","0xcb","0xcc","0xcd","0xce","0xcf","0xd0","0xd1","0xd2","0xd3","0xd4","0xd5","0xd6","0xd7","0xd8","0xd9","0xda","0xdb","0xdc","0xdd","0xde","0xdf","0xe0","0xe1","0xe2","0xe4","0xe3","0xe6","0xe5","0xe8","0xe7","0xe9","0xea","0xeb","0xec","0xed","0xee","0xef","0xf0","0xf1","0xf2","0xf8","0xf9","0xfa","0xfb","0xfc","0xfd","0xfe","0xff","0x100","0x101","0x102","0x103","0x104","0x105","0x106","0x107","0x108","0x109","0x10a","0x10b","0x10c","0x10d","0x10e","0x10f","0x110","0x111","0x112","0x113","0x114","0x115","0x116","0x117","0x118","0x119","0x11a","0x11b","0x11c","0x11d","0x11e","0x11f","0x120","0x121","0x122"];
  var arReplaced = ["0x3042","0x3041","0x3044","0x3043","0x3046","0x3045","0x3048","0x3047","0x304a","0x3049","0x304b","0x304d","0x304f","0x3051","0x3053","0x3055","0x3057","0x3059","0x305b","0x305d","0x305f","0x3061","0x3064","0x3063","0x3066","0x3068","0x306a","0x306b","0x306c","0x306d","0x306e","0x306f","0x3072","0x3075","0x3078","0x307b","0x307e","0x307f","0x3080","0x3081","0x3082","0x3084","0x3083","0x3086","0x3085","0x3088","0x3087","0x3089","0x308a","0x308b","0x308c","0x308d","0x308f","0x3092","0x3093","0x3001","0x3002","0x30a1","0x30a2","0x30a3","0x30a4","0x30a5","0x30a6","0x30a7","0x30a8","0x30a9","0x30aa","0x30ab","0x30ad","0x30af","0x30b1","0x30b3","0x30b5","0x30b7","0x30b9","0x30bb","0x30bd","0x30bf","0x30c1","0x30c3","0x30c4","0x30c6","0x30c8","0x30ca","0x30cb","0x30cc","0x30cd","0x30ce","0x30cf","0x30d2","0x30d5","0x30d8","0x30db","0x30de","0x30df","0x30e0","0x30e1","0x30e2","0x30e3","0x30e4","0x30e5","0x30e6","0x30e7","0x30e8","0x30e9","0x30ea","0x30eb","0x30ec","0x30ed","0x30ef","0x30f2","0x30f3","0x30fc","0x309b","0x309c","0x75c5","0x75c7","0x72c2","0x77f3","0x8056","0x907a","0x7269","0x795e","0x6b7b","0x3005"];


  for(var i=0; i<arChars.length; i++){
    console.log(arChars[i]);
    var toBeGlyphName = getGlyphName(arReplaced[i], lines);
    var ngGlyphName = getGlyphName(arChars[i], lines);
    fileContent = fileContent.replace(new RegExp('"'+ngGlyphName+'"','g'), '"'+toBeGlyphName+'"')
  }

  /**
  var toBeGlyphName = getGlyphName(toBeReplaced, lines);

  for(var i=0; i<ngChars.length; i++){
    var ngGlyphName = getGlyphName(ngChars[i], lines);
    fileContent = fileContent.replace(new RegExp(ngGlyphName+'"','g'), toBeGlyphName+'"')
  }
  **/

  var newFileName = orgFileName.replace('\.ttx','_new.ttx');
  fs.writeFileSync(newFileName, fileContent);
  console.log('(replace): ' + orgFileName + ' -> ' + newFileName);
  return newFileName;
}

function getGlyphName(theGlyph, lines){
  var m;
  var n;
  for (var i=0; i<lines.length; i++){
    if (lines[i].match(theGlyph)){
      if (m = lines[i].match('name="([^\"]+)"/>')){
        return m[1];
      }
    }
  }
  console.log('error: '+theGlyph+' not found.');
  process.exit(-1);
}
